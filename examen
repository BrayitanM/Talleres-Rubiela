import 'dart:io';

class Producto {
  int id;
  String nombre;
  double precio;
  int cantidad;

  Producto({required this.id, required this.nombre, required this.precio, required this.cantidad});

  @override
  String toString() {
    return 'ID: $id, Nombre: $nombre, Precio: \$${precio.toStringAsFixed(2)}, Cantidad: $cantidad';
  }
}

class Tienda {
  List<Producto> _productos = [];
  int _idProducto = 1;

  void agregarProducto() {
    stdout.write('Ingrese el nombre del producto: ');
    String nombre = stdin.readLineSync()?.trim() ?? '';
    if (nombre.isEmpty) {
      print(' El nombre no puede estar vacío.');
      return;
    }

    stdout.write('Ingrese el precio del producto: ');
    String? inputPrecio = stdin.readLineSync();
    double? precio = double.tryParse(inputPrecio ?? '');
    if (precio == null || precio <= 0) {
      print(' Precio inválido. Debe ser un número mayor a 0.');
      return;
    }

    stdout.write('Ingrese la cantidad disponible del producto: ');
    String? inputCantidad = stdin.readLineSync();
    int? cantidad = int.tryParse(inputCantidad ?? '');
    if (cantidad == null || cantidad < 0) {
      print(' Cantidad inválida. Debe ser un número entero mayor o igual a 0.');
      return;
    }

    final producto = Producto(
      id: _idProducto,
      nombre: nombre,
      precio: precio,
      cantidad: cantidad,
    );
    _productos.add(producto);
    _idProducto++;

    print(' Producto agregado exitosamente');
  }

  void listarProductos() {
    if (_productos.isEmpty) {
      print(' No hay productos en la tienda');
    } else {
      for (var i = 0; i < _productos.length; i++) {
        print('Índice: ${i + 1} - ${_productos[i]}');
      }
    }
  }

  void actualizarProducto() {
    if (_productos.isEmpty) {
      print(' No hay productos en la tienda');
      return;
    }

    listarProductos();
    stdout.write('Ingrese el número del producto a actualizar: ');
    final indice = int.tryParse(stdin.readLineSync() ?? '') ?? 0;

    if (indice <= 0 || indice > _productos.length) {
      print(' Índice inválido');
      return;
    }

    final producto = _productos[indice - 1];

    stdout.write('Ingrese el nuevo nombre del producto (${producto.nombre}): ');
    String nombre = stdin.readLineSync()?.trim() ?? '';
    if (nombre.isNotEmpty) {
      producto.nombre = nombre;
    }

    stdout.write('Ingrese el nuevo precio del producto (${producto.precio}): ');
    String? inputPrecio = stdin.readLineSync();
    double? precio = double.tryParse(inputPrecio ?? '');
    if (precio != null && precio > 0) {
      producto.precio = precio;
    }

    stdout.write('Ingrese la nueva cantidad disponible (${producto.cantidad}): ');
    String? inputCantidad = stdin.readLineSync();
    int? cantidad = int.tryParse(inputCantidad ?? '');
    if (cantidad != null && cantidad >= 0) {
      producto.cantidad = cantidad;
    }

    print(' Producto actualizado exitosamente');
  }

  void eliminarProducto() {
    if (_productos.isEmpty) {
      print(' No hay productos en la tienda');
      return;
    }

    listarProductos();
    stdout.write('Ingrese el número del producto a eliminar: ');
    final indice = int.tryParse(stdin.readLineSync() ?? '') ?? 0;

    if (indice <= 0 || indice > _productos.length) {
      print(' Índice inválido');
      return;
    }

    _productos.removeAt(indice - 1);
    print(' Producto eliminado exitosamente');
  }
}

void main() {
  final tienda = Tienda();

  while (true) {
    print('\n--- Menú ---');
    print('1. Agregar producto');
    print('2. Listar productos');
    print('3. Actualizar producto');
    print('4. Eliminar producto');
    print('5. Salir');

    stdout.write('Ingrese una opción: ');
    final opcion = stdin.readLineSync() ?? '';

    switch (opcion) {
      case '1':
        tienda.agregarProducto();
        break;
      case '2':
        tienda.listarProductos();
        break;
      case '3':
        tienda.actualizarProducto();
        break;
      case '4':
        tienda.eliminarProducto();
        break;
      case '5':
        print(' Saliendo...');
        return;
      default:
        print(' Opción inválida. Intente de nuevo.');
    }
  }
}
